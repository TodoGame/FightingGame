# register should respond with registered user (without password)
POST {{host}}/register
Content-Type: application/json

{
  "username": "username",
  "password": "password",
  "name": "name3"
}

###

# login should respond with Authorization header with Bearer prefix
POST {{host}}/login
Content-Type: application/json

{
  "username": "username",
  "password": "password"
}

###

# login should respond with user entity without password
POST {{host}}/login
Content-Type: application/json

{
  "username": "username",
  "password": "password"
}

###

# Error tests

# register should respond with 400 if we try to register the same user twice
POST {{host}}/register
Content-Type: application/json

{
  "username": "username",
  "password": "otherpassword",
  "name": "othername"
}

###



# not providing username should throw 400
POST {{host}}/register
Content-Type: application/json

{
  "name": "without username",
  "password": "pass"
}

###username

# not providing password should throw 400
POST {{host}}/register
Content-Type: application/json

{
  "username": "otherusername",
  "name": "without pass"
}


###

# not providing name should throw 400
POST {{host}}/register
Content-Type: application/json

{
  "username": "without name",
  "password": "password"
}


###

# Login should respond with 401 if password is not correct
POST {{host}}/login
Content-Type: application/json

{
  "username": "username",
  "password": "incorrectpassword"
}

###

# login should respond with 401 if there is no user with that username
POST {{host}}/login
Content-Type: application/json

{
  "username": "somerandomusername",
  "password": "incorrectpassword"
}
