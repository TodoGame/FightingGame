POST {{host}}/changemypassword
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
  "oldPassword": "password",
  "newPassword": "qwerty"
}

> {%
client.test('Change password with correct old password should respond with 202', function() {
    client.assert(response.status === 202, 'status should be Accepted 202')
})
 %}

###

POST {{host}}/login
Content-Type: application/json

{
  "username": "username",
  "password": "password"
}

> {%
client.test('login with old password should return 401', function() {
    client.assert(response.status === 401)
})
 %}

###

POST {{host}}/login
Content-Type: application/json

{
  "username": "username",
  "password": "qwerty"
}

> {%
client.test('login with new password should return Auth header with Bearer token', function() {
    client.assert(response.status === 200)
    client.assert(response.headers.valueOf("Authorization").startsWith("Bearer"), 'has a bearer token')
})
 %}

###

POST {{host}}/changemypassword
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
  "oldPassword": "password",
  "newPassword": "qwerty1"
}

> {%
client.test('changing password with incorrect old password should throw 401', function() {
    client.assert(response.status === 401)
})
 %}

###

POST {{host}}/changemypassword
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
  "oldPassword": "qwerty",
  "newPassword": "password"
}

> {%
client.test('password should be changed back again when provided correct old password', function() {
    client.assert(response.status === 202)
})
 %}

###